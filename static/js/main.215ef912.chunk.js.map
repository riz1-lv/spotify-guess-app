{"version":3,"sources":["hash.js","spotifyData.js","config.js","components/Button.js","components/Login.js","components/Player.js","components/PlayerButton.js","components/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","fetch","require","token","a","console","log","headers","Accept","Authorization","response","json","data","scopes","STYLES","SIZES","Button","children","classesName","type","onClick","buttonStyle","buttonSize","link","disabled","checkStyle","includes","checkSize","href","className","Login","process","join","encodeURIComponent","icon","faTwitter","Player","props","id","controls","name","src","source","key","PlayerButton","buttons","songplaying","incCorrect","useState","setClassName","click","setclick","butn","setbutn","setDisabled","x","document","getElementsByClassName","useEffect","i","length","classList","add","Quiz","songName","num","setNum","getButtonInfo","index","songNumber","songList","artists","getAllArtists","Math","floor","random","song","getButtonTitles","preview_url","rand","incSong","increaseNumCorrect","disabler","numCorrect","App","authToken","setAuthToken","render","setRender","completed","setCompleted","songNum","setSongNum","songCount","setSongCount","currentSong","setCurrentSong","_token","access_token","getTopTracks","then","dec","inc","getRandName","randName","items","getElementById","style","display","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.215ef912.chunk.js","sourcesContent":["export const hash = window.location.hash\r\n  .substring(1)\r\n  .split(\"&\")\r\n  .reduce(function(initial, item) {\r\n    if (item) {\r\n      var parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n    }\r\n    return initial;\r\n  }, {});\r\nwindow.location.hash = \"\";\r\n\r\nexport default hash;","const fetch = require('node-fetch');\r\n\r\nexport async function getTopTracks(token){\r\n  console.log(\"Bearer \" + token)\r\n  const response = await fetch(\"https://api.spotify.com/v1/me/top/tracks?time_range=long_term&limit=50\", {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  })\r\n  const data = await response.json();\r\n  return(data);\r\n}\r\n\r\nexport async function getRecentTopTracks(token){\r\n  console.log(\"Bearer \" + token)\r\n  const response = await fetch(\"https://api.spotify.com/v1/me/top/artists?time_range=medium_term&limit=50\", {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  })\r\n  const data = await response.json();\r\n  return(data);\r\n}\r\n","export const authEndpoint = 'https://accounts.spotify.com/authorize';\r\nexport const clientId = process.env.REACT_APP_CLIENT_ID;\r\nexport const redirectUri = \"http://localhost:3000\";\r\nexport const scopes = [\r\n  \"user-top-read\",\r\n  \"user-read-currently-playing\",\r\n  \"user-read-playback-state\",\r\n];\r\n","\r\nimport {React} from 'react'\r\nimport './Button.css'\r\n\r\n\r\n\r\n\r\nconst STYLES = ['btn--primary','btn--outline'];\r\n\r\nconst SIZES = ['btn--medium','btn--large'];\r\n\r\nexport const Button = ({children, classesName, type, onClick, buttonStyle, buttonSize, link, disabled}) => {\r\n  const checkStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\r\n\r\n  const checkSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n\r\n  return(\r\n    <a href={link} className=\"btn-mobile\">\r\n      <button className= { `${classesName} btn  ${checkStyle} ${checkSize}`} onClick={onClick} disabled={disabled} type={type}>\r\n        {children}\r\n      </button>\r\n    </a>\r\n  );\r\n}\r\n","\r\nimport {authEndpoint, clientId, redirectUri, scopes } from '../config.js'\r\n\r\nimport { Button } from './Button.js';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport './Login.css'\r\n\r\n\r\n\r\nconst Login = () => {\r\n  \r\n  return (<div className=\"login-element\">\r\n    <header>\r\n      <h1 className=\"title\">\r\n        Guess Your Spotify\r\n      </h1>\r\n    </header>\r\n    <div className=\"info-text\">\r\n      <p>\r\n        You think you know your favorite songs? put that to the test in this short quiz, we'll show you a short snippet of your favorite\r\n        songs, try to guess the name of the song and artist. Sign in to spotify below to get started!\r\n      </p>\r\n    </div>\r\n    <section className=\"btns\">\r\n    <div>\r\n      <Button className=\"btn btn--loginApp-link\" link={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`} buttonStyle=\"btn--primary\" buttonSize='btn--large'>Login to Spotify</Button>\r\n    </div>\r\n    <div>\r\n      <Button className=\"btn-twitter\" link={'https://twitter.com/intent/tweet?hashtags=GuessYourSpotify&&text=' +\r\n    encodeURIComponent(' Find out how well you know your top spotify songs ')} buttonStyle=\"btn--primary\"><FontAwesomeIcon icon={faTwitter} /></Button>\r\n    </div>\r\n    </section>\r\n </div> )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport './Player.css'\r\nconst Player = (props) => {\r\n\r\n  return (\r\n    <div>\r\n       <audio id=\"player\" className=\"audio-player\" controls name=\"media\">\r\n          <source key={props.key} src={props.source} />\r\n        </audio>\r\n        <div> \r\n          {/** \r\n    <button onClick={()=>document.getElementById('player').play()}>Play</button> \r\n    <button onClick={()=>document.getElementById('player').pause()}>Pause</button> \r\n    <button onClick={()=>document.getElementById('player').volume += 0.1}>Vol +</button> \r\n    <button onClick={()=>document.getElementById('player').volume -= 0.1}>Vol -</button> \r\n    */}\r\n</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Player\r\n","import {React, useState, useEffect} from 'react'\r\nimport \"./PlayerButton.css\"\r\nimport { Button } from './Button'\r\n\r\nconst PlayerButton = ({children, type, buttons, onClick, buttonStyle, buttonSize, link, songplaying, incCorrect}) => {\r\n  const [className,setClassName] = useState('clicked')\r\n  const [click,setclick] = useState(false)\r\n  const [butn, setbutn] = useState(buttons)\r\n  const [disabled,setDisabled] = useState()\r\n  const x = document.getElementsByClassName('unclicked btn  btn--primary btn--medium');\r\n  const clicker = () =>{\r\n    console.log(\"clicked\")\r\n  \r\n    if(children.includes(songplaying.name)){\r\n      setClassName(\"correct-ans\");\r\n      console.log(className);\r\n     incCorrect()\r\n     setDisabled(true)\r\n    }\r\n    for (let i = 0; i < x.length; i++) {\r\n      x[i].disabled=\"true\"\r\n      x[i].classList.add(\"unselectable\")\r\n    }\r\n    setclick(!click);\r\n  }\r\n  useEffect(() => {\r\n    setbutn(buttons)\r\n \r\n  },[buttons,butn])\r\n\r\n  return ( <>\r\n      <Button  classesName={click ? 'quizbtn '+className : 'unclicked'} buttonStyle={buttonStyle} buttonSize={buttonSize} disabled={disabled} onClick={clicker} type={type} link={link} children={children}>\r\n        {children}</Button>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default PlayerButton\r\n","import React,{useEffect, useState} from 'react'\r\nimport { Button } from './Button'\r\nimport Player from './Player'\r\nimport PlayerButton from './PlayerButton';\r\nimport './Quiz.css'\r\n\r\n//const playedSongs = new Set();\r\nlet buttons = [0,1,2,3,4];\r\n\r\nconst Quiz = (props) => {\r\n\r\nconst reload = ()=>{props.rand();}\r\n\r\n\r\n  const [guessSong, setGuessSong] = useState(props.songName);\r\n  const [disabled,setDisabled] = useState(\"\")\r\n  const [num, setNum] = useState(false)\r\n\r\n  function Disabler()  {\r\n    setDisabled(\"true\");\r\n  }\r\n  \r\n  const inc = () =>{\r\n    setNum(!num);\r\n  }\r\n\r\n  const nextSong = () =>{\r\n   setGuessSong()\r\n  }\r\n  \r\n  const getAllArtists = (songNumber) =>{\r\n    let artists = \"\";\r\n    for(let i = 0; i < props.songList[songNumber].artists.length; i++){\r\n      if(i === props.songList[songNumber].artists.length-1){\r\n        artists += props.songList[songNumber].artists[i].name;\r\n      }\r\n      else\r\n        artists += props.songList[songNumber].artists[i].name +\", \";\r\n    }\r\n    return artists;\r\n  }\r\n\r\n  const getSongName = (songNumber) =>{\r\n    let name = props.songList[songNumber].name;\r\n    return name;\r\n  }\r\n\r\n  const  getButtonTitles =  () =>{\r\n   \r\n    for(let i = 0; i < buttons.length; i++){\r\n        buttons[i] = Math.floor(Math.random()*50)\r\n    }\r\n    if(!buttons.includes(props.song)){\r\n      buttons[Math.floor(Math.random()*5)] = props.song\r\n    }\r\n     console.log(buttons);\r\n     \r\n}\r\n  function getButtonInfo(index){\r\n    const song = getSongName(index);\r\n    const artist = getAllArtists(index);\r\n\r\n    return song + \" \\n- \" + artist;\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getButtonTitles()\r\n    \r\n  })\r\n\r\n  useEffect(() => {\r\n  inc()\r\n  },[])\r\n\r\n \r\n  useEffect(() => { \r\n    \r\n    console.log(props.songList[props.song])\r\n  if(props.songName.preview_url == null){\r\n    reload();\r\n    console.log(`${props.song} has a null preview uri`)\r\n  }\r\n  /**\r\n  if(playedSongs.has(props.song)){\r\n    reload();\r\n    console.log(`song ${props.song} has been played already`)\r\n  }\r\n  playedSongs.add(props.song)\r\n  console.log(playedSongs)\r\n  */\r\n})\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"next-container\">\r\n        <Button className=\"next-button\" onClick={()=>{props.rand(); props.incSong()}}>➞</Button>\r\n      </div>\r\n\r\n      <Player source={props.songList[props.song].preview_url} />\r\n      \r\n      <div className=\"quiz-buttons\">\r\n        <PlayerButton incCorrect={props.increaseNumCorrect} disabled={disabled} disabler = {Disabler} songplaying = {props.songName}>{getButtonInfo([buttons[0]])}</PlayerButton>\r\n        <PlayerButton incCorrect={props.increaseNumCorrect} disabled={disabled}   key={num} songplaying = {props.songName}>{getButtonInfo([buttons[1]])}</PlayerButton>\r\n        <PlayerButton incCorrect={props.increaseNumCorrect} disabled={disabled}  songplaying = {props.songName}>{getButtonInfo(buttons[2])}</PlayerButton>\r\n        <PlayerButton incCorrect={props.increaseNumCorrect} songplaying = {props.songName}>{getButtonInfo(buttons[3])}</PlayerButton>\r\n        <PlayerButton incCorrect={props.increaseNumCorrect} songplaying = {props.songName}>{getButtonInfo(buttons[4])}</PlayerButton>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Quiz\r\n","import React, {useEffect,useState} from \"react\";\r\nimport hash from \"./hash.js\";\r\nimport \"./App.css\";\r\nimport {getTopTracks} from './spotifyData.js'\r\nimport Login from \"./components/Login.js\";\r\nimport Quiz from \"./components/Quiz.js\";\r\nimport { Button } from './components/Button.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport './components/Login.css'\r\n\r\n\r\nlet numCorrect=0;\r\n\r\n const App = () => {\r\n  const [authToken,setAuthToken] = useState({token:null});\r\n  const [render,setRender] = useState(false);\r\n  const [completed,setCompleted] = useState(false);\r\n  const [songNum, setSongNum] = useState(Math.floor(Math.random()*50));\r\n  const [songCount,setSongCount] = useState(1);\r\n  const [currentSong,setCurrentSong] = useState({\r\n  item: {\r\n    song:''\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\nconst increaseNumCorrect = () =>{\r\n  numCorrect++;\r\n  console.log(\"u got \"+numCorrect)\r\n}\r\n\r\n\r\n\r\nconst incSongCount = () =>{\r\n  setSongCount(songCount+1);\r\n}\r\n\r\n\r\nconst increment = () =>{\r\n  if(songNum < 49){\r\n  setSongNum(songNum + 1)\r\n  console.log(songNum);\r\n  }\r\n}\r\n\r\nconst decrement = ()=>{\r\n  if(songNum > 0){\r\n  setSongNum(songNum - 1);\r\n  console.log(songNum);\r\n  }\r\n}\r\n\r\nconst random = ()=>{\r\n  console.log(songNum)\r\n  const rand = Math.floor(Math.random()*50)\r\n  setSongNum(\r\n    rand\r\n  )\r\n  \r\n}\r\nconst getRandomSongName = () =>{\r\n  let randName = currentSong.song.items[Math.floor(Math.random()*50)].name;\r\n  console.log(randName)\r\n  return randName;\r\n}\r\n\r\nuseEffect(() => {\r\n  if(songCount===12){\r\n    setCompleted(true)\r\n  }\r\n}, [songCount])\r\n\r\nuseEffect(()=>{\r\n    // Set token\r\n    console.log(hash);\r\n    let _token = hash.access_token;\r\n    if (_token) {\r\n      // Set token\r\n      setAuthToken({\r\n        token: _token\r\n      }); \r\n    }\r\n    if(authToken.token){\r\n      getTopTracks(authToken.token).then(x=>setCurrentSong({song:x}))\r\n    }\r\n},[authToken.token])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"App-header\">\r\n      {!authToken.token && (\r\n        <Login/>\r\n      )}\r\n      {render && <>\r\n          <header id=\"title\">\r\n          <h1>\r\n            Guess Your Spotify\r\n          </h1>\r\n          <div>{songCount}/12</div>\r\n        </header>\r\n          <div className={completed? \"quiz\":\"\"}>\r\n            <Quiz key={songNum} song={songNum} increaseNumCorrect={increaseNumCorrect} incSong={incSongCount} rand={random} dec={decrement} inc={increment} getRandName={getRandomSongName} songList={currentSong.song.items} songName={currentSong.song.items[songNum]} />\r\n          </div>\r\n        </>}\r\n        {completed && <div>\r\n            <h1>\r\n              {`Congragulations you got ${numCorrect} correct! `} \r\n            </h1>   \r\n            <Button className=\"btn-twitter\" link={'https://twitter.com/intent/tweet?hashtags=GuessYourSpotify&&text=' +\r\n              encodeURIComponent(' Find out how well you know your top spotify songs ')} buttonStyle=\"btn--primary\"><FontAwesomeIcon icon={faTwitter} /></Button>\r\n          </div>}\r\n    \r\n      <div id=\"start-btn\" className={authToken.token ? 'player active' : 'player'}>\r\n        <Button onClick={()=>{setRender(true); console.log(songNum); document.getElementById(\"start-btn\").style.display=\"none\"}}>Start Quiz</Button>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}